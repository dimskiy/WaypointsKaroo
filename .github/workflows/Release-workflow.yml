# This is a basic workflow to help you get started with Actions

name: Release-pipe

# Controls when the workflow will run
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Enter app version name'
        required: true
        default: '1.0'
      release_notes:
        description: 'Enter release notes'
        required: true
        default: 'Some feature added.\nAnother bug fixed'

jobs:
  build-release:
    runs-on: ubuntu-latest

    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Update 'manifest-karoo-template.json' with release notes
        run: |
          jq '.releaseNotes = env.RELEASE_NOTES' manifest-karoo-template.json > manifest-karoo-temp.json
          mv manifest-karoo-temp.json manifest-karoo-template.json

          git add manifest-karoo-template.json
        env:
          RELEASE_NOTES: ${{ github.event.inputs.release_notes }}

      - name: Update App version code/name
        run: |
          VERSION_CODE=$(grep "^APP_VERSION_CODE=" gradle.properties | cut -d'=' -f2 | tr -d '\n')
          CURRENT_VERSION_NAME=$(grep "^APP_VERSION_NAME=" gradle.properties | cut -d'=' -f2 | tr -d '\n')
          
          NEW_VERSION_CODE=$((VERSION_CODE + 1))
          NEW_VERSION_NAME="${{ github.event.inputs.version }}"
          RELEASE_NOTES="${{ github.event.inputs.release_notes }}"
          
          # Update gradle.properties
          sed -i "s/APP_VERSION_CODE=$VERSION_CODE/APP_VERSION_CODE=$NEW_VERSION_CODE/" gradle.properties
          sed -i "s/APP_VERSION_NAME=$CURRENT_VERSION_NAME/APP_VERSION_NAME=$NEW_VERSION_NAME/" gradle.properties
          
          git config user.name "GitHub Actions"
          git add gradle.properties
          git commit -m "Release $NEW_VERSION_NAME:\n$RELEASE_NOTES"
          git push
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Decode Keystore file
        run: |
          echo "${{ secrets.KEYSTORE_FILE }}" | base64 --decode > app/keystore.jks

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 --decode > app/google-services.json

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Run Unit Tests
        run: ./gradlew testReleaseUnitTest

#      - name: Run Instrumented Android Tests
#        run: ./gradlew connectedAndroidTest

      - name: Assemble and Sign APK
        run: ./gradlew assembleRelease
        env:
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
          KEYSTORE_FILE: keystore.jks

      - name: Upload release assets
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: Release v${{ github.event.inputs.version }}
          files: |
            app/build/outputs/apk/release/app-release.apk
            app/build/outputs/apk/release/assets/app_icon.webp
            app/build/outputs/apk/release/assets/manifest-karoo.json
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
